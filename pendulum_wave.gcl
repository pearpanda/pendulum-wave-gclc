%%% Petar Nikić - Talasno Klatno

%% Konstante

% g
number g 9.81

% pi
number pi 3.141592653589793

array pi_frac { 12 }
number n 1
while { n <= 12 }
{
    expression pi_frac[n] { pi / n }
    expression n { n + 1 }
}

%% Konfiguracija

number BrojKlatana 15
number BrojPerioda 2
number GlobalniPeriod 45
number BrojOscilacijaNajduzeg 20
number Rastojanje 1
number FPS 60

number UgaoAmplituda pi_frac[6]

number CircleRadius 3

%% Izvođenja

expression frames { BrojPerioda * GlobalniPeriod * FPS }  % 1152
point Point_Vreme 0 0 54 0

expression dt { 1 / FPS }

array BrojOscilacija { BrojKlatana }
array Period { BrojKlatana }
array Duzina { BrojKlatana }

number n 0
while { n < BrojKlatana }
{
    expression BrojOscilacija[n] { BrojOscilacijaNajduzeg + n }
    expression Period[n] { GlobalniPeriod / BrojOscilacija[n] }
    expression Duzina[n] { g * pow(Period[n] / (2 * pi), 2) }    % Aproksimacija malih uglova
    expression n { n + 1 }
}

%% Simulacija - Ojler-Kromerova metoda

% Vreme
getx t Point_Vreme

% Simulacija
procedure KlatnoPutujuciTalas { t k pi UgaoAmplituda Period Ugao }
{
    expression Ugao { UgaoAmplituda * cos((2 * pi) / Period * t) }
}

%% Crtanje - 3D
number X 240
number Y 160

expression X_C { X / 2 }
expression Y_C { Y / 2 }
expression Y_T { Y - (Y / 10) }

dim X Y
point O_z 0 0
point O_circle CircleRadius 0
point O X_C Y_T
cmark_rt O

procedure GetColor { hue R G B }
{
    expression h60 { hue / 60 }
    expression X { 1 - abs((h60 - floor(h60 / 2) * 2) - 1) }

    if_then_else { hue < 60 } {
        number R 1
        number G X
        number B 0
    } {if_then_else { hue < 120 } {
        number R X
        number G 1
        number B 0
    } {if_then_else { hue < 180 } {
        number R 0
        number G 1
        number B X
    } {if_then_else { hue < 240 } {
        number R 0
        number G X
        number B 1
    } {if_then_else { hue < 300 } {
        number R X
        number G 0
        number B 1
    } {
        number R 1
        number G 0
        number B X
    }}}}}

    expression R { 255 * R }
    expression G { 255 * G }
    expression B { 255 * B }
}

background 50 120 50

number k 0
while { k < BrojKlatana }
{
    number Ugao UgaoAmplituda

    call KlatnoPutujuciTalas { t k pi UgaoAmplituda Period[k] Ugao }
    expression UgaoDeg { (Ugao / pi) * 180 }

    expression MinY { - Y * (Duzina[k] / 1.8) }
    point A_zs 0 MinY
    rotate A_z O_z UgaoDeg A_zs
    translate A O_z O A_z
    translate A_circle O_z O_circle A

    circle circ A A_circle

    drawsegment O A

    expression hue { 360 * k / BrojKlatana }
    call GetColor { hue R G B }
    color R G B
    fillcircle circ
    color 0 0 0

    expression k { k + 1 }
}

animation_frames frames FPS
